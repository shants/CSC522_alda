intro_to_r <- function(num_values){
# input: num_values type: integer, specifies the sample size of the random vector you are to generate.
# output: a  list:  [generated vector (type: double), mean of vector (type: double), median of the vector (type: double), max value of vector (type: double), min value of the vector (type: double)]
new_vector<-rnorm(n=num_values)
c_mean <- mean(new_vector)
c_meadian <- median(new_vector)
c_max <- max(new_vector)
c_min <- min(new_vector)
output <- list(new_vector=new_vector, new_mean= c_mean, new_median=c_mean, new_max = c_max, new_min = c_min)
return (output)
}
c_max <- max(new_vector)
c_min <- min(new_vector)
setwd("E:/Google Drive/CSC/CSC522/HW/HW1/HW1_p7")
source('E:/Google Drive/CSC/CSC522/HW/HW1/HW1_p7/hw1.R', echo=TRUE)
source('E:/Google Drive/CSC/CSC522/HW/HW1/HW1_p7/hw1_checker.R', echo=TRUE)
source('E:/Google Drive/CSC/CSC522/HW/HW1/HW1_p7/hw1.R', echo=TRUE)
source('E:/Google Drive/CSC/CSC522/HW/HW1/HW1_p7/hw1.R', echo=TRUE)
source('E:/Google Drive/CSC/CSC522/HW/HW1/HW1_p7/hw1_checker.R', echo=TRUE)
View(cosine_result)
euclidean_result - cosine_result
source('E:/Google Drive/CSC/CSC522/HW/HW1/HW1_p7/hw1.R', echo=TRUE)
source('E:/Google Drive/CSC/CSC522/HW/HW1/HW1_p7/hw1_checker.R', echo=TRUE)
data_matrix_normalized - data_matrix_normalized_1
setwd("E:/BitBucket/CSC522/hw2/HW2_p5")
d <- read.csv("C:\Users\darpa\Downloads\quora-question-pairs\test.csv")
setwd("C:/Users/darpa/Downloads/quora-question-pairs")
d <- read.csv("./test.csv")
source('E:/BitBucket/CSC522/hw2/HW2_p5/hw2.R')
setwd("E:/BitBucket/CSC522/hw2/HW2_p5")
source('E:/BitBucket/CSC522/hw2/HW2_p5/hw2.R', echo=TRUE)
source('E:/BitBucket/CSC522/hw2/HW2_p5/hw2_checker.R', echo=TRUE)
